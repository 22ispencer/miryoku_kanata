# Copyright 2021 Manna Harbour
# https://github.com/manna-harbour/miryoku

name: 'Main'
on:
  workflow_call:
    inputs:
      mode:
        type: string
      alphas:
        type: string
        default: '["default"]'
      nav:
        type: string
        default: '["default"]'
      clipboard:
        type: string
        default: '["default"]'
      layers:
        type: string
        default: '["default"]'
      mapping:
        type: string
        default: '["default"]'
      kmonad_os:
        type: string
        default: '["default"]'
      rules:
        type: string
        default: '["default"]'
      custom_config:
        type: string
        default: '["default"]'
jobs:
  main:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mode: ${{ fromJSON(inputs.mode) }}
        alphas: ${{ fromJSON(inputs.alphas) }}
        nav: ${{ fromJSON(inputs.nav) }}
        clipboard: ${{ fromJSON(inputs.clipboard) }}
        layers: ${{ fromJSON(inputs.layers) }}
        mapping: ${{ fromJSON(inputs.mapping) }}
        kmonad_os: ${{ fromJSON(inputs.kmonad_os) }}
        rules: ${{ fromJSON(inputs.rules) }}
        custom_config: ${{ fromJSON(inputs.custom_config) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Process inputs
        id: inputs
        run: |
          artifacts_dir="artifacts"
          mkdir "$artifacts_dir"
          src='src'
          build="$src/build"
          rules="$src/custom_rules.mk"
          echo -e '# Copyright 2021 Manna Harbour\n# https://github.com/manna-harbour/miryoku\n' > "$rules"
          config="$src/custom_config.h"
          echo -e '// Copyright 2021 Manna Harbour\n// https://github.com/manna-harbour/miryoku\n\n#pragma once\n' > "$config"
          artifact_build_name='miryoku_kmonad'
          for option in "alphas=${{ matrix.alphas }}" "nav=${{ matrix.nav }}" "clipboard=${{ matrix.clipboard }}" "layers=${{ matrix.layers }}" "mapping=${{ matrix.mapping }}" "kmonad_os=${{ matrix.kmonad_os }}"
          do
            if ! expr "$option" : '.*=default$'
            then
                artifact_build_name="$artifact_build_name "`echo "$option" | tr '=' '_'`
                option=`echo "MIRYOKU_$option" | tr 'a-z' 'A-Z'`
                echo "$option" >> "$rules"
            fi
          done
          if [ -n "${{ matrix.rules }}" -a "${{ matrix.rules }}" != 'default' ]
          then
            artifact_build_name="$artifact_build_name rules_"`echo "${{ matrix.rules }}" | md5sum | cut -d ' ' -f 1`
            echo "${{ matrix.rules }}" >> "$rules"
          fi
          if [ -n "${{ matrix.custom_config }}" -a "${{ matrix.custom_config }}" != 'default' ]
          then
            artifact_build_name="$artifact_build_name config_"`echo "${{ matrix.custom_config }}" | md5sum | cut -d ' ' -f 1`
            echo "${{ matrix.custom_config }}" >> "$config"
          fi
          cp "$rules" "$config" "$artifacts_dir"
          artifact_build_name=`echo $artifact_build_name | tr ' ' '-'`
          echo "::set-output name=artifact-dir::$artifacts_dir"
          echo "::set-output name=artifact-build-name::$artifact_build_name"
          echo "::set-output name=src::src"
          echo "::set-output name=build::$build"
      - name: Remove Build
        if: ${{ matrix.mode == 'test' }}
        run: |
          rm -r "${{ steps.inputs.outputs.build }}"
          mkdir "${{ steps.inputs.outputs.build }}"
          git status -s "${{ steps.inputs.outputs.build }}"
      - name: Build
        run: cd "${{ steps.inputs.outputs.src }}" && make
      - name: Copy config
        if: ${{ matrix.mode == 'build' }}
        run: |
          for file in "${{ steps.inputs.outputs.build }}"/*
          do
            if [ -f "$file" ]
            then
              cp "$file" "${{ steps.inputs.outputs.artifact-dir }}"
            fi
          done
      - name: Diff
        if: ${{ matrix.mode == 'test' }}
        run: |
          git status -s "${{ steps.inputs.outputs.build }}"
          git diff --exit-code "${{ steps.inputs.outputs.build }}"
      - name: Archive Artifacts
        if: ${{ matrix.mode == 'build' }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.inputs.outputs.artifact-build-name }}
          path: ${{ steps.inputs.outputs.artifact-dir }}
